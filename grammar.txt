Expr -> AssignmentExpr;
AssignmentExpr -> AddExpr ("=" AddExpr)*;
AddExpr -> MulExpr ("+"|"-" MulExpr)*;
MulExpr -> UnaryExpr ("*"|"/" UnaryExpr)*;
UnaryExpr -> -ExpExpr | ExpExpr;
ExpExpr -> FunctionCall ("^" UnaryExpr)*;
FunctionCall -> IndexExpr ("(" ExprList ")")*;
IndexExpr -> PrimaryExpr ("[" Expr "]")*

PrimaryExpr -> FunctionDeclaration | Block | LetExpr  | ID | Number | "(" Expr ")";

LetExpr -> "let" ID "=" Expr;
ReturnExpr -> Expr | "return" Expr;

Statement -> Expr ";";

Program -> Statement*;

ExprList -> Expr? ("," Expr)*;
FunctionCall -> Expr "(" ExprList ")";
Array -> "[" ExprList "]";
Block -> "{" Statement* "}";

IdentifierList -> ID? ("," ID)*;
FunctionDeclaration -> "fn" ID? "(" ID* ")" Block;